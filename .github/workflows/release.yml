name: 'Release::gh-ghpm-rs'
on:
  push:
    tags:
      - "v*.*.*"
permissions:
  contents: write
  attestations: write
  id-token: write

jobs:
  release:
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-amd64
          - os_name: Linux-arm64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: linux-arm64
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            name: darwin-amd64
          - os_name: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            name: darwin-arm64
    steps:
      - uses: actions/checkout@v4.2.2

      - name: 'download target'
        run: rustup target add ${{ matrix.platform.target }}

      - name: 'install aarch64-linux tools'
        if: matrix.platform.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get -y install musl-tools  gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu build-essential
          echo "TARGET_CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "RUSTFLAGS=-C linker=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - uses: cli/gh-extension-precompile@v2.0.0
        env:
          TARGET: ${{ matrix.platform.target }}
          DIST_FILE_NAME: ${{ matrix.platform.name }}
        with:
          build_script_override: "script/build.sh"
          generate_attestations: true
